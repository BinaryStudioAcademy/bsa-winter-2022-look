name: Look - CI/CD

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
      api-tag: ${{ secrets.DOCKER_API_REPOSITORY }}:${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}
      web-tag: ${{ secrets.DOCKER_WEB_REPOSITORY }}:${{ steps.extract_branch.outputs.branch }}-${{ github.sha }}
      environment: ${{ github.ref == 'refs/heads/main' && 'production' || github.ref == 'refs/heads/develop' && 'staging' || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

  build-api:
    runs-on: ubuntu-latest
    needs:
      - prepare

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Copy docker-compose configuration
        working-directory: backend
        run: cp docker-compose.test.yml docker-compose.override.yml

      - name: Validate docker-compose configuration
        working-directory: backend
        run: docker-compose config --quiet

      - name: Copy testing environment variables
        working-directory: backend
        run: cp .env.testing.example .env.testing

      - name: Build images
        working-directory: backend
        run: docker-compose build

      - name: Start containers
        working-directory: backend
        run: docker-compose up -d

      - name: Validate Composer configuration
        working-directory: backend
        run: docker-compose exec -T api composer validate --no-check-publish

      - name: Run tests
        working-directory: backend
        run: docker-compose exec -T api php artisan test

      - name: Push Docker image
        if: ${{ needs.prepare.outputs.branch == 'develop' || needs.prepare.outputs.branch == 'main' }}
        run: |
          docker image tag bsa-look-api ${{ needs.prepare.outputs.api-tag }}
          docker push ${{ needs.prepare.outputs.api-tag }}

  build-web:
    runs-on: ubuntu-latest
    needs:
      - prepare

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build Docker image
        working-directory: frontend
        run: |
          docker build --file deployment/docker/Dockerfile -t ${{ needs.prepare.outputs.api-tag }} .

      - name: Push Docker image
        working-directory: frontend
        run: |
          docker push ${{ needs.prepare.outputs.api-tag }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build-api
      - build-web
    environment: ${{ needs.prepare.outputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ needs.prepare.outputs.api-tag }}
            docker pull ${{ needs.prepare.outputs.web-tag }}
            docker stop bsa-look-api || true
            docker container rm bsa-look-api || true
            docker run -dit \
              --name=bsa-look-api \
              --restart unless-stopped \
              ${{ needs.prepare.outputs.api-tag }}
            docker stop bsa-look-web || true
            docker container rm bsa-look-web || true
            docker run -dit \
              --name=bsa-look-web \
              --restart unless-stopped \
              ${{ needs.prepare.outputs.web-tag }}
